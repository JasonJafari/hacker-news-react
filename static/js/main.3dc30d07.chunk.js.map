{"version":3,"sources":["shared/context/new-context.jsx","shared/context/loader-context.jsx","components/Header.jsx","components/New.jsx","components/News.jsx","components/Loader.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["NewContext","createContext","NewProvider","props","useState","getNewItems","setNewItems","Provider","value","children","LoaderContext","LoaderProvider","firstvalue","getloader","setloader","Header","timer","useContext","useEffect","fetch","then","results","json","data","NewNews","hits","map","item","NewNew","id","objectID","title","author","score","points","time","created_at","link","url","Summary","story_text","push","handleSearch","ev","i","setTimeout","window","clearInterval","clearTimeout","cancelAnimationFrame","searchVlue","target","length","Math","random","toString","className","type","placeholder","onChange","onKeyUp","New","href","News","summery","substring","replace","key","Loader","style","display","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dc30d07.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'; \r\n \r\nexport const NewContext = createContext(); \r\n \r\nexport const NewProvider = (props) => { \r\n    const [getNewItems, setNewItems] = useState([{}]) \r\n    return ( \r\n        <NewContext.Provider \r\n            value={[getNewItems, setNewItems]} \r\n        > \r\n            {props.children} \r\n        </NewContext.Provider> \r\n    ) \r\n}","import React, { createContext, useState } from 'react'; \r\n \r\nexport const LoaderContext = createContext(); \r\n \r\nexport const LoaderProvider = (props) => { \r\n    const [getloader, setloader] = useState({ \r\n        value: 1,firstvalue:0 \r\n    }) \r\n    return ( \r\n        <LoaderContext.Provider \r\n            value={[getloader, setloader]} \r\n        > \r\n            {props.children} \r\n        </LoaderContext.Provider> \r\n    ) \r\n}","import React, { useContext, useEffect } from 'react'; \r\n \r\nimport './Header.scss' \r\nimport { NewContext } from '../shared/context/new-context'; \r\nimport { LoaderContext } from '../shared/context/loader-context'; \r\n \r\nconst Header = () => { \r\n    var timer; \r\n    var timerCounter; \r\n \r\n    const [getNewItems, setNewItems] = useContext(NewContext); \r\n    const [getloader, setloader] = useContext(LoaderContext); \r\n \r\n    useEffect(() => { \r\n        if (getloader.firstvalue == 0) { \r\n            fetch(`http://hn.algolia.com/api/v1/search?tags=front_page`) \r\n                .then(results => results.json()) \r\n                .then(data => { \r\n                    const NewNews = [] \r\n                    data.hits.map(item => { \r\n                        const NewNew = { \r\n                            id: item.objectID, \r\n                            title: item.title, \r\n                            author: item.author, \r\n                            score: item.points, \r\n                            time: item.created_at, \r\n                            link: item.url, \r\n                            Summary: item.story_text \r\n                        } \r\n                        NewNews.push(NewNew) \r\n                    }) \r\n                    setNewItems(NewNews) \r\n                    setloader({ value: 0, firstvalue: 1 }) \r\n                }); \r\n        } \r\n \r\n    }); \r\n \r\n    const handleSearch = (ev) => { \r\n        for (var i = setTimeout(function () { }, 0); i > 0; i--) { \r\n            window.clearInterval(i); \r\n            window.clearTimeout(i); \r\n            if (window.cancelAnimationFrame) window.cancelAnimationFrame(i); \r\n        } \r\n        clearTimeout(timer); \r\n        const searchVlue = ev.target.value; \r\n        if (searchVlue.length == 0) { \r\n            setNewItems([{ id: 1, title: \"Wating for new data\" }]) \r\n            setloader({ value: 1, firstvalue: 0 }) \r\n        } else if (searchVlue.length <= 2) { \r\n            setNewItems([{ id: 1, title: \"You Shoud Add at least 3 Charachter for Showing data\" }]) \r\n            setloader({ value: 0, firstvalue: 1 }) \r\n        } else { \r\n            setloader({ value: 1, firstvalue: 1 }) \r\n            timer = setTimeout(() => { \r\n                fetch(`http://hn.algolia.com/api/v1/search?query=${searchVlue}&tags=story&hitsPerPage=50`) \r\n                    .then(results => results.json()) \r\n                    .then(data => { \r\n                        const NewNews = [] \r\n                        data.hits.map(item => { \r\n                            const NewNew = { \r\n                                id: item.objectID, \r\n                                title: item.title, \r\n                                author: item.author, \r\n                                score: item.points, \r\n                                time: item.created_at, \r\n                                link: item.url, \r\n                                Summary: item.story_text \r\n                            } \r\n                            // console.log(item) \r\n                            NewNews.push(NewNew) \r\n                        }) \r\n                        if (NewNews.length == 0) { \r\n                            NewNews.push({ id: Math.random, title: \"There is no result match with your input\" }) \r\n                        } \r\n                        setNewItems(NewNews) \r\n                        // console.log(\"ok\") \r\n                        // console.log(timer) \r\n                        setloader({ value: 0, firstvalue: 1 }) \r\n                    }); \r\n            }, 500); \r\n            timerCounter = timer.toString() + '' \r\n \r\n        } \r\n \r\n    } \r\n    return ( \r\n        <header className=\"header\"> \r\n            <h1>hacker news: </h1> \r\n            <input type=\"text\" placeholder=\"Please search\" onChange={handleSearch} onKeyUp={handleSearch} /> \r\n        </header> \r\n    ); \r\n} \r\n \r\nexport default Header;","import React from 'react'; \r\n \r\nimport './New.scss' \r\n \r\nconst New = (props) => { \r\n    return ( \r\n        <div className=\"new\"> \r\n            <h2>{props.title}</h2> \r\n            <ul> \r\n                <li className=\"author\">Author: {props.author}</li> \r\n                <li className=\"score\">Score: {props.score}</li> \r\n                <br/> \r\n                <li> created at :{props.time}</li> \r\n                <li><a href={props.link} target=\"_blank\">Source</a></li> \r\n            </ul> \r\n            <p> \r\n                {props.Summary} \r\n            </p> \r\n        </div> \r\n    ); \r\n} \r\n \r\nexport default New;","import React, { useContext } from 'react'; \r\n \r\nimport './News.scss'; \r\nimport New from './New'; \r\nimport { NewContext } from '../shared/context/new-context'; \r\n \r\nconst News = () => { \r\n \r\n    const [getNewItems, setNewItems] = useContext(NewContext); \r\n \r\n    return ( \r\n        <section className=\"news\"> \r\n            { \r\n                getNewItems.map(item => { \r\n                    let summery = item.Summary \r\n                    if (summery == null || summery.length == 0) { \r\n                        summery = \"there was not any story about this new.\" \r\n                    } \r\n                    else { \r\n                        summery += '' \r\n                    } \r\n                    if (summery.length >= 70) { \r\n                        summery = summery.substring(0, 70) \r\n                    } \r\n                    summery += ' ...' \r\n                    summery = summery.replace(/<\\/?[^>]+(>|$)/g, \"\"); \r\n                    return ( \r\n                        <New \r\n                            key={item.id} \r\n                            title={item.title} \r\n                            author={item.author} \r\n                            score={item.score} \r\n                            time={item.time} \r\n                            link={item.link} \r\n                            Summary={summery} \r\n                        /> \r\n                    ) \r\n                }) \r\n            } \r\n \r\n        </section> \r\n \r\n    ); \r\n} \r\n \r\nexport default News;","import React, { useContext } from 'react'; \r\n \r\nimport './Loader.scss' \r\nimport { LoaderContext } from '../shared/context/loader-context'; \r\n \r\nconst Loader = () => { \r\n    const [getloader, setloader] = useContext(LoaderContext); \r\n    // console.log(getloader) \r\n    return ( \r\n        <section \r\n            className=\"news loader-main\" \r\n            style={{ \r\n                display: getloader.value ? 'flex' : \"none\" \r\n            }} \r\n        > \r\n            <div className=\"loader\"></div> \r\n        </section> \r\n    ); \r\n} \r\n \r\nexport default Loader;","import React from 'react';\r\n\r\nimport './Footer.scss'\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <footer>\r\n            <p>Desigh by <a href=\"https://Jasonjafari.com\" target=\"_blank\">JasonJafari</a> Powered by React. Code is this <a href=\"https://github.com/JasonJafari/hacker-news-react\" target=\"_blank\">Repo</a> </p>\r\n        </footer>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React from 'react';\n\nimport './App.scss';\nimport Header from './components/Header';\nimport News from './components/News';\nimport { NewProvider } from './shared/context/new-context';\nimport Loader from './components/Loader';\nimport { LoaderProvider } from './shared/context/loader-context';\nimport Footer from './components/Footer';\n\nconst App = () => {\n  return (\n    <NewProvider >\n      <LoaderProvider >\n        <div className=\"App\">\n          <Header />\n          <News />\n          <Loader />\n          <Footer />\n        </div>\n      </LoaderProvider>\n    </NewProvider>\n\n  );\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}